/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mygarage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JTable;


public class MyGarage extends javax.swing.JFrame {
    
    
    /**
     * Creates new form MyGarage
     */
    public MyGarage() {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        FirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        LastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Address = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        brand = new javax.swing.JTextField();
        model = new javax.swing.JTextField();
        plate = new javax.swing.JTextField();
        doors = new javax.swing.JTextField();
        cc = new javax.swing.JTextField();
        hp = new javax.swing.JTextField();
        StateLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        arrival = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        dep = new javax.swing.JList<>();
        Save = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        showAll = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ParkTable = new javax.swing.JTable();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Garage Management");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Person Details"));

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Address");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)
                .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Car Details"));

        jLabel4.setText("Brand");

        jLabel5.setText("Model Name");

        jLabel6.setText("Number");

        jLabel7.setText("Door Number");

        jLabel8.setText("Engine Size");

        jLabel9.setText("HP");

        jLabel11.setText("Arrival Date");

        jLabel12.setText("Departure Date");

        arrival.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(arrival);

        dep.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(dep);

        Save.setText("Save");
        Save.setToolTipText("Save To DataBase");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.setToolTipText("Clear all fileds");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.setToolTipText("");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        showAll.setText("Show All");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(plate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(showAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cc, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                        .addComponent(hp))
                                    .addComponent(doors, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 134, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(StateLabel)
                        .addGap(51, 51, 51))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(plate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Save)
                            .addComponent(showAll))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ClearButton)
                            .addComponent(StateLabel)
                            .addComponent(SearchButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        ParkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(ParkTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        if(checkNull()){
            newCar = new Car(brand.getText(),model.getText(),plate.getText(),cc.getText(),Integer.parseInt(hp.getText()),Integer.parseInt(doors.getText()));
            newCustomer = new Customer(FirstName.getText(),LastName.getText(),Address.getText());
            Arrival = new java.sql.Date(2018, 10, 7);
            Dep = new java.sql.Date(2018, 10, 10);
            SaveCar();
            SaveCustomer();
            int car = SelectMaxCar();
            int customer = SelectMaxCustomer();
            updateParking(car,customer);
            clearFields();
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        jPanel3.grabFocus();
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        clearFields();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
        Object[][] all = getAll();
        String[] collumns = {"Firstname","Lastname","Plate Number","Brand","Model"};
        ParkTable = new JTable(all,collumns);
    }//GEN-LAST:event_showAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyGarage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyGarage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyGarage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyGarage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyGarage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private javax.swing.JButton ClearButton;
    private javax.swing.JTextField FirstName;
    private javax.swing.JTextField LastName;
    private javax.swing.JTable ParkTable;
    private javax.swing.JButton Save;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel StateLabel;
    private javax.swing.JList<String> arrival;
    private javax.swing.JTextField brand;
    private javax.swing.JTextField cc;
    private javax.swing.JList<String> dep;
    private javax.swing.JTextField doors;
    private javax.swing.JTextField hp;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField model;
    private javax.swing.JTextField plate;
    private javax.swing.JButton showAll;
    // End of variables declaration//GEN-END:variables
    
    private Connection connect = null;
    private Statement statement = null;
    private PreparedStatement insert = null;
    private PreparedStatement select = null;
    private ResultSet resultSet = null;
    private String url="jdbc:mysql://localhost/mygarage?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
    
    private Car newCar;
    private Customer newCustomer;
    private java.sql.Date Arrival;
    private java.sql.Date Dep;
    
    public  void SaveCar(){
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
           // System.out.print("SAVE CAR !\n");
            String carQuery = "INSERT INTO cars(`Brand`, `Model`, `Number_Plate`, `Engine_Size`, `Horse_Power`, `Arrival_Date`, `Departure_Date`, `doors`) VALUES (?,?,?,?,?,?,?,?)";
            //statement = connect.createStatement();
            //resultSet=statement.executeQuery(query);
            insert = connect.prepareStatement(carQuery);
            insert.setString(1, newCar.getBrand());
            insert.setString(2, newCar.getModel());
            insert.setString(3, newCar.getNumber());
            insert.setString(4, newCar.getEngine());
            insert.setInt(5, newCar.getHorsepower());
            insert.setDate(6, Arrival);
            insert.setDate(7, Dep);
            insert.setInt(8, newCar.getDoors());
            insert.executeUpdate();
            /*resultSet = select.executeQuery();
            while ( resultSet.next()) {
                System.out.println("Brand: " + resultSet.getString(2)+
                            "\nModel: "+resultSet.getString(3)+
                            "\nNumber Plate: "+resultSet.getString(4)+
                            "\nEngine Displacement: "+resultSet.getString(5)+
                            "\nHorsePower: "+resultSet.getString(6)+
                            "\nArrival Date: "+resultSet.getDate(7)+
                            "\nDeparture Date: "+resultSet.getDate(8)
                );
            }*/
            connect = null;
            insert = null;

            
        }
        catch(Exception e)
        {
            System.out.print("Do not connect to DB - Error:"+e);
        }
    }
    
    
    public void SaveCustomer(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
            //System.out.print("SAVE CUSTOMER !\n");
            String customerQuery = "INSERT INTO customers(FirstName,LastName,Address) VALUES(?,?,?)";
            insert = connect.prepareStatement(customerQuery);
            insert.setString(1, newCustomer.getFirstName());
            insert.setString(2, newCustomer.getLastName());
            insert.setString(3,newCustomer.getAddress());
            insert.executeUpdate();
                
            connect = null;
            insert = null;

                
        }catch(Exception e){
            System.out.print("Do not connect to DB - Error:"+e);
        }
    }
    
    public int SelectMaxCustomer(){
        try{
            int max=0;
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
            //System.out.print("SELECT MAX CUSTOMER\n");
            String select = "SELECT max(ID) FROM customers";
            statement = connect.createStatement();
            resultSet = statement.executeQuery(select);
            while ( resultSet.next()) {
                max = Integer.parseInt(resultSet.getString(1));
                System.out.println(resultSet.getString(1));
            }
            connect = null;
            
            return max;
            
                
        }catch(Exception e){
            System.out.print("Do not connect to DB - Error:"+e);
            return 0;
        }
    }
    
    public int SelectMaxCar(){
        try{
            int max=0;
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
            //System.out.print("SELECT MAX CAR\n");
            String select = "SELECT max(ID) FROM cars";
            statement = connect.createStatement();
            resultSet = statement.executeQuery(select);
            
            while ( resultSet.next()) {
                max = Integer.parseInt(resultSet.getString(1));
                System.out.println(resultSet.getString(1));
            }
            connect = null;
            
            return max;
            
                
        }catch(Exception e){
            System.out.print("Do not connect to DB - Error:"+e);
            return 0;
        }
    }
    
    public void updateParking(int car,int customer){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
            //System.out.print("UPDATE PARKING\n");
            String customerQuery = "INSERT INTO parking(personID,carID) VALUES(?,?)";
            insert = connect.prepareStatement(customerQuery);
            insert.setInt(1, customer);
            insert.setInt(2, car);
            insert.executeUpdate();
                
            connect = null;
            insert = null;
            StateLabel.setText("Commited");
                
        }catch(Exception e){
            System.out.print("Do not connect to DB - Error:"+e);
        }
    }
    
    
    public void clearFields(){
        FirstName.setText("");
        LastName.setText("");
        Address.setText("");
        StateLabel.setText("");
        brand.setText("");
        model.setText("");
        plate.setText("");
        cc.setText("");
        hp.setText("");
        doors.setText("");
    }
    
    public boolean checkNull(){
        if(FirstName.getText().equals("") && LastName.getText().equals("") && Address.getText().equals("")){
            StateLabel.setText("You need to complete all the fields!");
            return false;
        }
        else if(brand.getText().equals("") && model.getText().equals("") && plate.getText().equals("") && cc.getText().equals("") && doors.getText().equals("") && hp.getText().equals("")){
            StateLabel.setText("You need to complete all the fields!");
            return false;
        }
        return true;
    }
    
    public Object[][] getAll(){
         try{
            int count=0;
            int i =0;
            int[] carID;
            int[] customerID ;
            Customer[] allcustomers;
            Car[] allcars;
            Object[][] all;
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(url,"root", "");
            String select = "SELECT count(ID) FROM parking";
            statement = connect.createStatement();
            resultSet = statement.executeQuery(select);
            
            while ( resultSet.next()) {
                count = Integer.parseInt(resultSet.getString(1));
            }
            
            
            select = "SELECT CarID FROM parking";
            
            statement = connect.createStatement();
            resultSet = statement.executeQuery(select);
            
            carID = new int[count];
            while ( resultSet.next()) {
                carID[i] = Integer.parseInt(resultSet.getString(1));
                i++;
            }
            
            
            select = "SELECT PersonID FROM parking";
            statement = connect.createStatement();
            resultSet = statement.executeQuery(select);
            
            customerID = new int[count];
            i=0;
            while ( resultSet.next()) {
                customerID[i] = Integer.parseInt(resultSet.getString(1));
                
                i++;
            }
            
            allcustomers = new Customer[count];            
            for(int j = 0 ; j < customerID.length ; j++){
                select = "SELECT * FROM customers WHERE ID = ?";
            
                this.select = connect.prepareStatement(select);
                this.select.setInt(1, customerID[j]);
                resultSet = this.select.executeQuery();
                
                while ( resultSet.next()) {
                    allcustomers[j] = new Customer(resultSet.getString(2),resultSet.getString(3),resultSet.getString(4));
                }
            }
            
            allcars = new Car[count];
            
            for(int j = 0 ; j < carID.length ; j++){
                select = "SELECT * FROM cars WHERE ID = ?";
            
                this.select = connect.prepareStatement(select);
                this.select.setInt(1, carID[j]);
                resultSet = this.select.executeQuery();
                
                while ( resultSet.next()) {
                    allcars[j] = new Car(resultSet.getString(2),resultSet.getString(3),resultSet.getString(4),resultSet.getString(5),Integer.parseInt(resultSet.getString(6)),Integer.parseInt(resultSet.getString(9)));
                }
            }
            
            connect = null;
            all = new Object[count][5];
            for(int k = 0 ; k<allcars.length ; k++){
                all[k][0] = allcustomers[k].getFirstName();
                all[k][1] = allcustomers[k].getLastName();
                all[k][2] = allcars[k].getNumber();
                all[k][3] = allcars[k].getBrand();
                all[k][4] = allcars[k].getModel();
            }
            
            for(int k = 0 ; k<all.length ; k++){
                for(int l = 0 ;l<5 ; l++){
                    System.out.println(all[k][l]);
                }
            }
            
            return all;
                
        }catch(Exception e){
            System.out.print("Do not connect to DB - Error:"+e);
            return new Object[0][0];
        }
    
    }

}
